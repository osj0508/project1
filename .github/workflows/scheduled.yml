name: loop-run

on:
  workflow_dispatch: {}
  repository_dispatch:
    types: [rerun]

permissions:
  contents: write

concurrency:
  group: loop-run
  cancel-in-progress: true

jobs:
  run:
    runs-on: ubuntu-latest
    timeout-minutes: 350
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          persist-credentials: true

      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"   # 3.11 또는 3.13 권장 (패치버전 X)

      - name: Run loop
        shell: bash
        run: |
          set -euo pipefail
          set -x  # <-- 디버그 출력 (실패 원인 파악 쉬움)
          mkdir -p data

          start=$(date +%s)
          iter=0

          # 현재 브랜치명 폴백 (repository_dispatch에선 GITHUB_REF_NAME이 비어있을 수 있음)
          BRANCH="${GITHUB_REF_NAME:-${GITHUB_HEAD_REF:-main}}"

          while (( $(date +%s) - start < 60*340 )); do
            iter=$((iter+1))

            # 갱신 (iter 값을 파일에 기록하는 예)
            ITER="$iter" python - <<'PY'
from pathlib import Path
import os, tempfile

iter_val = int(os.environ["ITER"])
p = Path("data/test.txt")
p.parent.mkdir(parents=True, exist_ok=True)
PY

            # 변경 있을 때만 커밋/푸시
            if ! git diff --quiet -- data/test.txt; then
              git config user.name  "github-actions[bot]"
              git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
              git add data/test.txt
              git commit -m "tick: $(date -u +%Y-%m-%dT%H:%M:%SZ) (iter $iter)" || true
              # 브랜치 폴백 사용
              git pull --rebase --autostash origin "$BRANCH" || true
              git push origin "HEAD:$BRANCH" || true
            fi

            sleep 10
          done

      - name: Re-dispatch self
        env:
          GH_TOKEN: ${{ secrets.PAT_FOR_DISPATCH }}   # PAT with 'repo' scope
        run: |
          set -x
          curl -i -s -X POST \
            -H "Authorization: token ${GH_TOKEN}" \
            -H "Accept: application/vnd.github+json" \
            "https://api.github.com/repos/${{ github.repository }}/dispatches" \
            -d '{"event_type":"rerun"}'
