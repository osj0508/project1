name: loop-run

on:
  workflow_dispatch: {}
  repository_dispatch:
    types: [rerun]

permissions:
  contents: write

concurrency:
  group: loop-run
  cancel-in-progress: true

jobs:
  run:
    runs-on: ubuntu-latest
    timeout-minutes: 350
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          persist-credentials: true

      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"   

      - name: Run loop (python -c, your code style)
        shell: bash
        run: |
          set -euo pipefail
          mkdir -p data
          python -m pip install -q pandas requests
          start=$(date +%s)
          iter=0
          BRANCH="${GITHUB_REF_NAME:-${GITHUB_HEAD_REF:-main}}"
          
          bbranch="$BRANCH" python -c $'from pathlib import Path\nimport subprocess\nimport xml.etree.ElementTree as ET\nimport os\nimport pandas as pd\nimport requests\np2 = Path("data/ind_arr3.txt")\nfile = open(p2,"r")\ntext = file.readlines()\nind,ID = [],[]\nfor i in range(14582):\n    ind.append(int(text[i].split()[0]))\n    print(text[i].split()[1], (text[i].split()[1])[:len(text[i].split()[1])-2])\n    ID.append(int((text[i].split()[1])[:len(text[i].split()[1])-2]))\nfile.close()\np = Path("data/v_data.csv")\nv= pd.read_csv(p)\nBRANCH = int(os.environ["bbranch"])\ndef save(msg):\n    v.to_csv(p,index=False)\n    subprocess.run(["git","add","--",str(p)], check=True)\n    subprocess.run(["git","commit","-m", msg], check=False)\n    subprocess.run(["git","pull","--rebase","--autostash","origin", BRANCH], check=False)\n    subprocess.run(["git","push","origin", f"HEAD:{BRANCH}"], check=False)\n    print("Updated!")\nperiod = 1\nfor i in range(14582):\n    url = "http://openapi.seoul.go.kr:8088/64525562596f736a36384e78567553/xml/TrafficInfo/1/1/%d/"%(ID[i])\n    r = requests.get(url, timeout = 10)\n    try:\n        root = ET.fromstring(r.content)\n        row = root.find("row")\n        spd = float(row.findtext("prcs_spd"))\n        v.loc[ind[i],\"v\"] = spd\n    except:\n        pass\n    if i % period == 0:\n        save(f\"update v_data.csv (up to idx={i})\")\n'

      - name: Re-dispatch self
        env:
          GH_TOKEN: ${{ secrets.PAT_FOR_DISPATCH }}   # PAT with 'repo' scope
        run: |
          curl -s -X POST \
            -H "Authorization: token ${GH_TOKEN}" \
            -H "Accept: application/vnd.github+json" \
            "https://api.github.com/repos/${{ github.repository }}/dispatches" \
            -d '{"event_type":"rerun"}'
